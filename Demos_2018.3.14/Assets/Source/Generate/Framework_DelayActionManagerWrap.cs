//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Framework_DelayActionManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Framework.DelayActionManager), typeof(Framework.ManagerBase));
		L.RegFunction("CreateInstance", CreateInstance);
		L.RegFunction("CreateInstanceOnGameObject", CreateInstanceOnGameObject);
		L.RegFunction("Request", Request);
		L.RegFunction("IsInit", IsInit);
		L.RegFunction("AddDelayAction", AddDelayAction);
		L.RegFunction("RemoveDelayActionByHash", RemoveDelayActionByHash);
		L.RegFunction("AddLoopAction", AddLoopAction);
		L.RegFunction("RemoveLoopActionByHash", RemoveLoopActionByHash);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Instance", get_Instance, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateInstance(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Framework.DelayActionManager o = Framework.DelayActionManager.CreateInstance();
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 1)
			{
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 1);
				Framework.DelayActionManager o = Framework.DelayActionManager.CreateInstance(arg0);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Framework.DelayActionManager.CreateInstance");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateInstanceOnGameObject(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
			Framework.DelayActionManager o = Framework.DelayActionManager.CreateInstanceOnGameObject(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Request(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 1);
			Framework.DelayActionManager.Request(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsInit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			bool o = Framework.DelayActionManager.IsInit();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddDelayAction(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Framework.DelayActionManager obj = (Framework.DelayActionManager)ToLua.CheckObject<Framework.DelayActionManager>(L, 1);
			DelayActionBase arg0 = (DelayActionBase)ToLua.CheckObject<DelayActionBase>(L, 2);
			obj.AddDelayAction(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveDelayActionByHash(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Framework.DelayActionManager obj = (Framework.DelayActionManager)ToLua.CheckObject<Framework.DelayActionManager>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.RemoveDelayActionByHash(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddLoopAction(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Framework.DelayActionManager obj = (Framework.DelayActionManager)ToLua.CheckObject<Framework.DelayActionManager>(L, 1);
			DelayActionBase arg0 = (DelayActionBase)ToLua.CheckObject<DelayActionBase>(L, 2);
			obj.AddLoopAction(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveLoopActionByHash(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Framework.DelayActionManager obj = (Framework.DelayActionManager)ToLua.CheckObject<Framework.DelayActionManager>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.RemoveLoopActionByHash(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Framework.DelayActionManager.Instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

