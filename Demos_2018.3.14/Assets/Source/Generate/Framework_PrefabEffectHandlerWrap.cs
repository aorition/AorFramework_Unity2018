//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Framework_PrefabEffectHandlerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Framework.PrefabEffectHandler), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("EffectTrigger", EffectTrigger);
		L.RegFunction("EffectEnd", EffectEnd);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("SurviveDuration", get_SurviveDuration, set_SurviveDuration);
		L.RegVar("CheckAnimPlayEnd", get_CheckAnimPlayEnd, set_CheckAnimPlayEnd);
		L.RegVar("IgnoreTimeScale", get_IgnoreTimeScale, set_IgnoreTimeScale);
		L.RegVar("UseFixedUpdate", get_UseFixedUpdate, set_UseFixedUpdate);
		L.RegVar("IgnoreDestroyOnPlayEnd", get_IgnoreDestroyOnPlayEnd, set_IgnoreDestroyOnPlayEnd);
		L.RegVar("AutoDestroy", get_AutoDestroy, set_AutoDestroy);
		L.RegVar("OnEffectTrigger", get_OnEffectTrigger, set_OnEffectTrigger);
		L.RegVar("OnEffectPlayEnd", get_OnEffectPlayEnd, set_OnEffectPlayEnd);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EffectTrigger(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Framework.PrefabEffectHandler obj = (Framework.PrefabEffectHandler)ToLua.CheckObject<Framework.PrefabEffectHandler>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.EffectTrigger(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EffectEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Framework.PrefabEffectHandler obj = (Framework.PrefabEffectHandler)ToLua.CheckObject<Framework.PrefabEffectHandler>(L, 1);
			obj.EffectEnd();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SurviveDuration(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Framework.PrefabEffectHandler obj = (Framework.PrefabEffectHandler)o;
			float ret = obj.SurviveDuration;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index SurviveDuration on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CheckAnimPlayEnd(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Framework.PrefabEffectHandler obj = (Framework.PrefabEffectHandler)o;
			bool ret = obj.CheckAnimPlayEnd;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CheckAnimPlayEnd on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IgnoreTimeScale(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Framework.PrefabEffectHandler obj = (Framework.PrefabEffectHandler)o;
			bool ret = obj.IgnoreTimeScale;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IgnoreTimeScale on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UseFixedUpdate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Framework.PrefabEffectHandler obj = (Framework.PrefabEffectHandler)o;
			bool ret = obj.UseFixedUpdate;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index UseFixedUpdate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IgnoreDestroyOnPlayEnd(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Framework.PrefabEffectHandler obj = (Framework.PrefabEffectHandler)o;
			bool ret = obj.IgnoreDestroyOnPlayEnd;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IgnoreDestroyOnPlayEnd on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AutoDestroy(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Framework.PrefabEffectHandler obj = (Framework.PrefabEffectHandler)o;
			bool ret = obj.AutoDestroy;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AutoDestroy on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnEffectTrigger(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Framework.PrefabEffectHandler obj = (Framework.PrefabEffectHandler)o;
			System.Action<UnityEngine.GameObject,string> ret = obj.OnEffectTrigger;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnEffectTrigger on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnEffectPlayEnd(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Framework.PrefabEffectHandler obj = (Framework.PrefabEffectHandler)o;
			System.Action<UnityEngine.GameObject> ret = obj.OnEffectPlayEnd;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnEffectPlayEnd on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_SurviveDuration(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Framework.PrefabEffectHandler obj = (Framework.PrefabEffectHandler)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SurviveDuration = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index SurviveDuration on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CheckAnimPlayEnd(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Framework.PrefabEffectHandler obj = (Framework.PrefabEffectHandler)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.CheckAnimPlayEnd = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CheckAnimPlayEnd on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IgnoreTimeScale(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Framework.PrefabEffectHandler obj = (Framework.PrefabEffectHandler)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.IgnoreTimeScale = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IgnoreTimeScale on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_UseFixedUpdate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Framework.PrefabEffectHandler obj = (Framework.PrefabEffectHandler)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.UseFixedUpdate = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index UseFixedUpdate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IgnoreDestroyOnPlayEnd(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Framework.PrefabEffectHandler obj = (Framework.PrefabEffectHandler)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.IgnoreDestroyOnPlayEnd = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IgnoreDestroyOnPlayEnd on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AutoDestroy(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Framework.PrefabEffectHandler obj = (Framework.PrefabEffectHandler)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.AutoDestroy = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AutoDestroy on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnEffectTrigger(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Framework.PrefabEffectHandler obj = (Framework.PrefabEffectHandler)o;
			System.Action<UnityEngine.GameObject,string> arg0 = (System.Action<UnityEngine.GameObject,string>)ToLua.CheckDelegate<System.Action<UnityEngine.GameObject,string>>(L, 2);
			obj.OnEffectTrigger = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnEffectTrigger on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnEffectPlayEnd(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Framework.PrefabEffectHandler obj = (Framework.PrefabEffectHandler)o;
			System.Action<UnityEngine.GameObject> arg0 = (System.Action<UnityEngine.GameObject>)ToLua.CheckDelegate<System.Action<UnityEngine.GameObject>>(L, 2);
			obj.OnEffectPlayEnd = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnEffectPlayEnd on a nil value");
		}
	}
}

